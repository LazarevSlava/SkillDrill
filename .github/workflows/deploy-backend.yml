name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - "server/**"
      - "docker-compose.yml"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-backend
      cancel-in-progress: false
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PORT: ${{ secrets.DEPLOY_SSH_PORT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prep known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" -H "${DEPLOY_HOST}" >> ~/.ssh/known_hosts

      - name: Create remote dir (once)
        run: |
          ssh -p "${SSH_PORT:-22}" -i <(printf "%s" "${SSH_PRIVATE_KEY}") "${DEPLOY_USER}@${DEPLOY_HOST}" 'mkdir -p /opt/skilldrill/server'

      # Копируем только нужные файлы бэкенда на сервер (как фронт)
      - name: Rsync server/
        uses: Burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --delete --exclude node_modules --exclude .git
          path: ./server/
          remote_path: /opt/skilldrill/server/
          remote_host: ${{ env.DEPLOY_HOST }}
          remote_user: ${{ env.DEPLOY_USER }}
          remote_key: ${{ env.SSH_PRIVATE_KEY }}

      - name: Rsync docker-compose.yml
        uses: Burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz
          path: ./docker-compose.yml
          remote_path: /opt/skilldrill/
          remote_host: ${{ env.DEPLOY_HOST }}
          remote_user: ${{ env.DEPLOY_USER }}
          remote_key: ${{ env.SSH_PRIVATE_KEY }}

      # Никакого git на сервере — просто билдим/поднимаем
      - name: Compose up on server
        run: |
          ssh -p "${SSH_PORT:-22}" -i <(printf "%s" "${SSH_PRIVATE_KEY}") "${DEPLOY_USER}@${DEPLOY_HOST}" << 'EOF'
            set -euo pipefail
            cd /opt/skilldrill
            docker compose pull || true
            docker compose up -d --build
            docker compose ps
          EOF
